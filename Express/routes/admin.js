const express = require('express');
const router = express.Router();
const path = require('path'); //core node module so no need to install it

const rootDir = require('../util/path');

// /admin/add-product -> GET
router.get('/add-product', (req, res, next) => {
    // !handles the GET request generated by /admin/add-product
    // admin paart added in app.js and handles routes that have a path /admin/
    // res.send(`<h6>In add-product path</h6>`);
    // res.send(
    //     `<form action="/admin/add-product" method="POST">
    //     <input type="text" name="title"/>
    //     <button type="submit">Add product</button>
    //     </form>`
    // );
    // console.log('In the middleware');
    // next();
    res.sendFile(path.join(rootDir, 'views', 'add-product.html'));
    // res.sendFile(path.join(__dirname, '../', 'views', 'add-product.html'));
});

// /admin/add-product -> POST
router.post('/add-product', (req, res, next) => {
    // !handles the POST request generated by /admin/add-product
    // console.log(`Hello from product path`);
    // when we use app.use() issue is this will execute for get request as well
    // but we only want to limit it for post request
    // use app.post() //!will only handle incoming post req we get from /admin/add-product
    console.log(req.body);
    // we get the request body as key values pair object where
    // key is the name of input field and value as our input
    res.redirect('/');
});

// router.get('/product', (req, res) => {
//     res.send(`<h1>In /product path</h1>`);
// });

module.exports = router;

// after adding and submitting product, request sent to path /product
// read request body from there then redirect to root(home page)
